// import localFont from "next/font/local";
// import "./globals.css";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({ children }) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

"use client";

import { useEffect, useState } from "react";

import "../public/icon/style.css";
import "../public/scss/main.scss";
// import HomesModal from "@/components/modals/HomesModal";
import Context from "@/context/Context";
import { usePathname } from "next/navigation";
import Script from "next/script";
import Link from "next/link";
// import QuickView from "@/components/modals/QuickView";
// import ProductSidebar from "@/components/modals/ProductSidebar";
// import QuickAdd from "@/components/modals/QuickAdd";
// import Compare from "@/components/modals/Compare";
// import ShopCart from "@/components/modals/ShopCart";
// import AskQuestion from "@/components/modals/AskQuestion";
// import BlogSidebar from "@/components/modals/BlogSidebar";
// import ColorCompare from "@/components/modals/ColorCompare";
// import DeliveryReturn from "@/components/modals/DeliveryReturn";
// import FindSize from "@/components/modals/FindSize";
// import Login from "@/components/modals/Login";
// import MobileMenu from "@/components/modals/MobileMenu";
// import Register from "@/components/modals/Register";
// import ResetPass from "@/components/modals/ResetPass";
// import SearchModal from "@/components/modals/SearchModal";
// import ToolbarBottom from "@/components/modals/ToolbarBottom";
// import ToolbarShop from "@/components/modals/ToolbarShop";

// import { usePathname } from "next/navigation";
// import NewsletterModal from "@/components/modals/NewsletterModal";
// import ShareModal from "@/components/modals/ShareModal";
// import ScrollTop from "@/components/common/ScrollTop";
// import RtlToggle from "@/components/common/RtlToggle";

export default function RootLayout({ children }) {
  const pathname = usePathname();
  useEffect(() => {
    if (typeof window !== "undefined") {
      // Import the script only on the client side
      import("bootstrap/dist/js/bootstrap.esm").then(() => {
        // Module is imported, you can access any exported functionality if
      });
    }
  }, []);
  // useEffect(() => {
  //   const handleScroll = () => {
  //     const header = document.querySelector("header");
  //     if (window.scrollY > 100) {
  //       header.classList.add("header-bg");
  //     } else {
  //       header.classList.remove("header-bg");
  //     }
  //   };

  //   window.addEventListener("scroll", handleScroll);

  //   // Cleanup function to remove event listener on component unmount
  //   return () => {
  //     window.removeEventListener("scroll", handleScroll);
  //   };
  // }, []); // Empty dependency array means this effect runs once on mount and cleans up on unmount

  //const [scrollDirection, setScrollDirection] = useState("down");

  // useEffect(() => {
  //   setScrollDirection("up");
  //   const handleScroll = () => {
  //     const currentScrollY = window.scrollY;

  //     if (currentScrollY > 250) {
  //       if (currentScrollY > lastScrollY.current) {
  //         // Scrolling down
  //         setScrollDirection("down");
  //       } else {
  //         // Scrolling up
  //         setScrollDirection("up");
  //       }
  //     } else {
  //       // Below 250px
  //       setScrollDirection("down");
  //     }

  //     lastScrollY.current = currentScrollY;
  //   };

  //   const lastScrollY = { current: window.scrollY };

  //   // Add scroll event listener
  //   window.addEventListener("scroll", handleScroll);

  //   // Cleanup: remove event listener when component unmounts
  //   return () => {
  //     window.removeEventListener("scroll", handleScroll);
  //   };
  // }, [pathname]);

  // useEffect(() => {
  //   // Close any open modal
  //   const bootstrap = require("bootstrap"); // dynamically import bootstrap
  //   const modalElements = document.querySelectorAll(".modal.show");
  //   modalElements.forEach((modal) => {
  //     const modalInstance = bootstrap.Modal.getInstance(modal);
  //     if (modalInstance) {
  //       modalInstance.hide();
  //     }
  //   });

  //   // Close any open offcanvas
  //   const offcanvasElements = document.querySelectorAll(".offcanvas.show");
  //   offcanvasElements.forEach((offcanvas) => {
  //     const offcanvasInstance = bootstrap.Offcanvas.getInstance(offcanvas);
  //     if (offcanvasInstance) {
  //       offcanvasInstance.hide();
  //     }
  //   });
  // }, [pathname]); // Runs every time the route changes


 
  // Only runs once on component mount

  return (
    <html lang="en">
       
      <body>
        {/* <div className="preload preload-container" id="preloader">
          <div className="preload-logo">
            <div className="spinner"></div>
          </div>
        </div>{" "} */}
        <Context>
        <div id="wrapper">
          <div id="page" className="">
              {/* <div id="preload" className="preload-container">
                    <div className="preloading">
                        <span></span>
                    </div>
                </div> */}
              <div className="layout-wrap">{children}</div>
          </div>
        </div>
        </Context>
        <Script
          async
          src='/js/jquery.min.js'
          crossOrigin='anonymous'
        />
       
        <Script
          async
          src='/js/bootstrap.min.js'
          crossOrigin='anonymous'
        />
        <Script
          async
          src='/js/bootstrap-select.min.js'
          crossOrigin='anonymous'
        />
        <Script
          async
          src='/js/theme-settings.js'
          crossOrigin='anonymous'
        />
       <Script
          async
          src='/js/main.js'
          crossOrigin='anonymous'
        />
       {/* <Script
          async
          src='/js/zoom.js'
          crossOrigin='anonymous'
        /> */}
         {/* <Script
          async
          src='/js/morris.min.js'
          crossOrigin='anonymous'
        /> */}
        <Script
          async
          src='/js/raphael.min.js'
          crossOrigin='anonymous'
        />
        {/* <Script
          async
          src='/js/morris.js'
          crossOrigin='anonymous'
        /> */}
        <Script
          async
          src='/js/jvectormap.min.js'
          crossOrigin='anonymous'
        />
        <Script
          async
          src='/js/jvectormap-us-lcc.js'
          crossOrigin='anonymous'
        />
        <Script
          async
          src='/js/jvectormap-data.js'
          crossOrigin='anonymous'
        />
                <Script
          async
          src='/js/jvectormap.js'
          crossOrigin='anonymous'
        />
                        <Script
          async
          src='/js/switcher.js'
          crossOrigin='anonymous'
        />
                        <Script
          async
          src='/js/apexcharts/apexcharts.js'
          crossOrigin='anonymous'
        />
                        <Script
          async
          src='/js/apexcharts/line-chart-1.js'
          crossOrigin='anonymous'
        />
                                <Script
          async
          src='/js/apexcharts/line-chart-2.js'
          crossOrigin='anonymous'
        />
                                <Script
          async
          src='/js/apexcharts/line-chart-3.js'
          crossOrigin='anonymous'
        />
                                <Script
          async
          src='/js/apexcharts/line-chart-4.js'
          crossOrigin='anonymous'
        />
                                <Script
          async
          src='/js/apexcharts/line-chart-5.js'
          crossOrigin='anonymous'
        />
                                <Script
          async
          src='/js/apexcharts/line-chart-6.js'
          crossOrigin='anonymous'
        />

<Script
          async
          src='/js/apexcharts/line-chart-7.js'
          crossOrigin='anonymous'
        />
   
      </body>
    
      
    </html>
  );
}
